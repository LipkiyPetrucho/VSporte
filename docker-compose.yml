services:
  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./jteam:/jteam
    env_file:
      - .env
    environment:
      - DB_HOST=${POSTGRES_DB_HOST}
      - DB_NAME=${POSTGRES_DB_NAME}
      - DB_USER=${POSTGRES_DB_USER}
      - DB_PASS=${POSTGRES_DB_PASSWORD}
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000 &&
      python manage.py migrate"
    depends_on:
      - database
    networks:
      - vsporte

  database:
    image: postgres:14.6-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
      - POSTGRES_DB_HOST=${POSTGRES_DB_HOST}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    networks:
      - vsporte
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_DB_USER} -d ${POSTGRES_DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.5-alpine
    hostname: redis
    networks:
      - vsporte


  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A jteam.celery:app worker --loglevel=info
    volumes:
      - ./jteam:/jteam
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=${POSTGRES_DB_HOST}
      - DB_NAME=${POSTGRES_DB_NAME}
      - DB_USER=${POSTGRES_DB_USER}
      - DB_PASS=${POSTGRES_DB_PASSWORD}
    networks:
      - vsporte

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A jteam.celery:app flower
    volumes:
      - ./jteam:/jteam
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"
    networks:
      - vsporte

  pgadmin:
    image: dpage/pgadmin4
    container_name: jteam_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "8080:80"
    depends_on:
      - database
    networks:
      - vsporte

networks:
  vsporte:

volumes:
  pg_data:

